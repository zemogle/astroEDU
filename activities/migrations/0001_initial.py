# Generated by Django 2.2.14 on 2020-08-05 13:53

import activities.models
import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion
import parler.models
import search.mixins
import sorl.thumbnail.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('institutions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('featured', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=True)),
                ('release_date', models.DateTimeField()),
                ('embargo_date', models.DateTimeField(blank=True, null=True)),
                ('space', models.BooleanField(default=False)),
                ('earth', models.BooleanField(default=False)),
                ('navigation', models.BooleanField(default=False)),
                ('heritage', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('code', models.CharField(help_text='The 4 digit code that identifies the Activity, in the format "YY##": year, folowed by sequential number.', max_length=4, unique=True)),
                ('doi', models.CharField(blank=True, help_text='Digital Object Identifier, in the format XXXX/YYYY. See http://www.doi.org/', max_length=50, verbose_name='DOI')),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_date', models.DateTimeField(auto_now=True, null=True)),
                ('sourcelink_name', models.CharField(blank=True, max_length=255, verbose_name='Source Name')),
                ('sourcelink_url', models.URLField(blank=True, max_length=255, verbose_name='Source URL')),
                ('affiliation', models.CharField(max_length=255, verbose_name='Affiliation or organisation')),
                ('email', models.CharField(max_length=64, verbose_name='Email address of corresponding author')),
                ('suitable_group_size', models.IntegerField(verbose_name='Suitable group size')),
                ('max_number_at_once', models.IntegerField(verbose_name='Maximum number of people at once')),
                ('language', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name_plural': 'activities',
                'ordering': ['-code'],
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model, search.mixins.SearchModel),
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('featured', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=True)),
                ('release_date', models.DateTimeField()),
                ('embargo_date', models.DateTimeField(blank=True, null=True)),
                ('image', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='collections')),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_date', models.DateTimeField(auto_now=True, null=True)),
                ('activities', models.ManyToManyField(blank=True, related_name='collections', to='activities.Activity')),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='JourneyCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('featured', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=True)),
                ('release_date', models.DateTimeField()),
                ('embargo_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'journey category',
                'verbose_name_plural': 'journey category',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='JourneyChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('activities', models.ManyToManyField(blank=True, related_name='_journeychapter_activities_+', to='activities.Activity')),
                ('journey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.JourneyCategory')),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='LanguageAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_visual', models.BooleanField(default=False, help_text='The main visual is used as the cover image.')),
                ('show', models.BooleanField(default=False, help_text='Include in attachment list.', verbose_name='Show')),
                ('position', models.PositiveSmallIntegerField(default=0, help_text='Used to define the order of attachments in the attachment list.', verbose_name='Position')),
                ('hostmodel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.Activity')),
            ],
            options={
                'ordering': ['-show', 'position', 'id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Other'), (1, 'Video')], default=0)),
                ('main', models.BooleanField(default=False)),
                ('show', models.BooleanField(default=True)),
                ('position', models.IntegerField(default=0)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.Activity')),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'repositories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RepositoryEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=255)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.Activity')),
                ('repo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='activities.Repository')),
            ],
            options={
                'verbose_name_plural': 'repository entries',
                'ordering': ['repo'],
            },
        ),
        migrations.CreateModel(
            name='MetadataOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(choices=[('age', 'Age'), ('level', 'Level'), ('time', 'Time'), ('group', 'Group'), ('supervised', 'Supervised'), ('cost', 'Cost per student'), ('location', 'Location'), ('skills', 'Core skills'), ('learning', 'Type(s) of learning activity'), ('content_area_focus', 'Content Area focus'), ('astronomical_scientific_category', 'Astronomical Scientific Categories'), ('earth_science_keyword', 'Earth Science keywords'), ('space_science_keyword', 'Space Science keywords')], max_length=50)),
                ('code', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('position', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'ordering': ['group', 'position'],
                'unique_together': {('group', 'code')},
            },
        ),
        migrations.CreateModel(
            name='LanguageAttachmentTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('file', models.FileField(blank=True, upload_to=activities.models.get_translated_file_path_step)),
                ('master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='activities.LanguageAttachment')),
            ],
            options={
                'abstract': False,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='JourneyCategoryTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='General introduction')),
                ('master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='activities.JourneyCategory')),
            ],
            options={
                'abstract': False,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CollectionTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(help_text='Slug identifies the Collection; it is used as part of the URL.', unique=True)),
                ('description', models.TextField(blank=True, verbose_name='brief description')),
                ('master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='activities.Collection')),
            ],
            options={
                'abstract': False,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AuthorInstitution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='activities.Activity')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institutions.Person')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institutions.Institution')),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('file', models.FileField(blank=True, upload_to=activities.models.get_file_path_step)),
                ('main_visual', models.BooleanField(default=False, help_text='The main visual is used as the cover image.')),
                ('show', models.BooleanField(default=False, help_text='Include in attachment list.', verbose_name='Show')),
                ('position', models.PositiveSmallIntegerField(default=0, help_text='Used to define the order of attachments in the attachment list.', verbose_name='Position')),
                ('hostmodel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.Activity')),
            ],
            options={
                'ordering': ['-show', 'position', 'id'],
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='age',
            field=models.ManyToManyField(limit_choices_to={'group': 'age'}, related_name='_activity_age_+', to='activities.MetadataOption', verbose_name='Age range'),
        ),
        migrations.AddField(
            model_name='activity',
            name='astronomical_scientific_category',
            field=models.ManyToManyField(blank=True, limit_choices_to={'group': 'astronomical_categories'}, related_name='_activity_astronomical_scientific_category_+', to='activities.MetadataOption', verbose_name='Astronomical Scientific Categories'),
        ),
        migrations.AddField(
            model_name='activity',
            name='content_area_focus',
            field=models.ManyToManyField(limit_choices_to={'group': 'content_area_focus'}, related_name='_activity_content_area_focus_+', to='activities.MetadataOption', verbose_name='Content Area focus'),
        ),
        migrations.AddField(
            model_name='activity',
            name='cost',
            field=models.ForeignKey(limit_choices_to={'group': 'cost'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='activities.MetadataOption', verbose_name='Cost per student'),
        ),
        migrations.AddField(
            model_name='activity',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='institutions.Location', verbose_name='Country(s)'),
        ),
        migrations.AddField(
            model_name='activity',
            name='earth_science_keyword',
            field=models.ManyToManyField(blank=True, limit_choices_to={'group': 'earth_science'}, related_name='_activity_earth_science_keyword_+', to='activities.MetadataOption', verbose_name='Earth Science keywords'),
        ),
        migrations.AddField(
            model_name='activity',
            name='group',
            field=models.ForeignKey(limit_choices_to={'group': 'group'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='activities.MetadataOption', verbose_name='Group or individual activity'),
        ),
        migrations.AddField(
            model_name='activity',
            name='learning',
            field=models.ManyToManyField(help_text='Enquiry-based learning model', limit_choices_to={'group': 'learning'}, related_name='_activity_learning_+', to='activities.MetadataOption', verbose_name='type of learning activity'),
        ),
        migrations.AddField(
            model_name='activity',
            name='level',
            field=models.ManyToManyField(help_text='Specify at least one of "Age" and "Level". ', limit_choices_to={'group': 'level'}, related_name='_activity_level_+', to='activities.MetadataOption', verbose_name='Education level'),
        ),
        migrations.AddField(
            model_name='activity',
            name='location',
            field=models.ForeignKey(limit_choices_to={'group': 'location'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='activities.MetadataOption'),
        ),
        migrations.AddField(
            model_name='activity',
            name='original_author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='institutions.Person', verbose_name='Original Author of the activity (if not the authors listed above'),
        ),
        migrations.AddField(
            model_name='activity',
            name='other_keyword',
            field=models.ManyToManyField(blank=True, limit_choices_to={'group': 'other'}, related_name='_activity_other_keyword_+', to='activities.MetadataOption', verbose_name='Other'),
        ),
        migrations.AddField(
            model_name='activity',
            name='skills',
            field=models.ManyToManyField(limit_choices_to={'group': 'skills'}, related_name='_activity_skills_+', to='activities.MetadataOption', verbose_name='core skills'),
        ),
        migrations.AddField(
            model_name='activity',
            name='space_science_keyword',
            field=models.ManyToManyField(blank=True, limit_choices_to={'group': 'space_science'}, related_name='_activity_space_science_keyword_+', to='activities.MetadataOption', verbose_name='Space Science keywords'),
        ),
        migrations.AddField(
            model_name='activity',
            name='supervised',
            field=models.ForeignKey(limit_choices_to={'group': 'supervised'}, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='activities.MetadataOption', verbose_name='Supervised for safety'),
        ),
        migrations.AddField(
            model_name='activity',
            name='time',
            field=models.ForeignKey(limit_choices_to={'group': 'time'}, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='activities.MetadataOption'),
        ),
        migrations.CreateModel(
            name='LinkTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(blank=True, max_length=64)),
                ('url', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='activities.Link')),
            ],
            options={
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='JourneyChapterTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=255, verbose_name='Chapter title')),
                ('description', models.TextField(blank=True, verbose_name='Chapter introduction')),
                ('master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='activities.JourneyChapter')),
            ],
            options={
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ActivityTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, max_length=200, populate_from='title')),
                ('title', models.CharField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=255, verbose_name='Activity title')),
                ('teaser', models.TextField(help_text='250 words', max_length=140, verbose_name='Abstract')),
                ('theme', models.CharField(help_text='Use top level AVM metadata', max_length=40)),
                ('keywords', models.TextField(help_text='List of keywords, separated by commas')),
                ('acknowledgement', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True, help_text='Maximum 2 sentences! Maybe what and how?', verbose_name='brief description')),
                ('goals', models.TextField()),
                ('objectives', models.TextField(verbose_name='Learning Objectives')),
                ('evaluation', models.TextField(help_text='If the teacher/educator wants to evaluate the impact of the activity, how can she/he do it?')),
                ('materials', models.TextField(blank=True, help_text='Please indicate costs and/or suppliers if possible', verbose_name='List of material')),
                ('background', models.TextField(verbose_name='Background Information')),
                ('fulldesc', models.TextField(verbose_name='Full description of the activity')),
                ('curriculum', models.TextField(blank=True, help_text='Please indicate which country', verbose_name='Connection to school curriculum')),
                ('additional_information', models.TextField(blank=True, help_text='Notes, Tips, Resources, Follow-up, Questions, Safety Requirements, Variations')),
                ('conclusion', models.TextField()),
                ('alert_message', models.TextField(blank=True, help_text='Alert message, do display at the top of the activity page')),
                ('short_desc_material', models.TextField(blank=True, verbose_name='Short description of Suplementary material')),
                ('further_reading', models.TextField(blank=True, default='', verbose_name='Further reading')),
                ('reference', models.TextField(blank=True, verbose_name='References')),
                ('big_idea', models.CharField(blank=True, max_length=200, verbose_name='Big Idea of Science')),
                ('spaceawe_authorship', models.TextField(blank=True, verbose_name='Space Awareness authorship')),
                ('master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='activities.Activity')),
            ],
            options={
                'unique_together': {('language_code', 'master'), ('language_code', 'slug')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
